<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.osaz.danaka.product.model.dao.ProductMapper">
    <resultMap type="com.osaz.danaka.product.model.dto.ProductDTO" id="productResultMap">
        <id property="productNo" column="PRODUCT_NO"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="brandNo" column="BRAND_NO"/>
        <result property="productName" column="PRODUCT_NAME"/>
        <result property="productRegDate" column="PRODUCT_REG_DATE"/>
        <result property="stock" column="STOCK"/>
        <association property="rod" resultMap="rodResultMap"></association>
        <association property="reel" resultMap="reelResultMap"></association>
        <association property="line" resultMap="lineResultMap"></association>
    </resultMap>
    <resultMap id="rodResultMap" type="com.osaz.danaka.product.model.dto.RodDTO">
        <result property="model" column="ROD_MODEL"/>
        <result property="reelType" column="ROD_REEL_TYPE"/>
        <result property="lineMin" column="LINE_MIN"/>
        <result property="lineMax" column="LINE_MAX"/>
        <result property="price" column="ROD_PRICE"/>
    </resultMap>
    <resultMap id="reelResultMap" type="com.osaz.danaka.product.model.dto.ReelDTO">
        <result property="model" column="REEL_MODEL"/>
        <result property="reelType" column="REEL_TYPE"/>
        <result property="price" column="REEL_PRICE"/>
    </resultMap>
    <resultMap id="lineResultMap" type="com.osaz.danaka.product.model.dto.LineDTO">
        <result property="lineSize" column="LINE_SIZE"/>
        <result property="price" column="LINE_PRICE"/>
    </resultMap>

    <!-- 페이징 처리를 위한 상품 총 개수 조회 쿼리 -->
    <select id="selectTotalCount" resultType="_int" parameterType="hashmap">
        SELECT
            COUNT(*)
          FROM VIEW_PRODUCT
         WHERE CATEGORY_CODE = #{ categoryCode }
           AND PRODUCT_NO IN (SELECT
                                  MIN(PRODUCT_NO)
                                FROM VIEW_PRODUCT
                               GROUP BY PRODUCT_NAME)
      <if test="searchCondition == 'productName'">
          AND PRODUCT_NAME LIKE '%' || #{ searchValue } || '%'
      </if>
    </select>
    <!-- 상품 카테고리에 따른 대상품 목록 조회 쿼리, 정렬을 위해 동적 쿼리 사용함 -->
    <select id="selectListByCategory" parameterType="com.osaz.danaka.common.SelectCriteria" resultMap="productResultMap">
        SELECT
            A.*,
            A.RNUM,
            H.SAVE_PATH
        <if test="orderCondition != null and orderCondition == 'sale'">
            ,E.TOTSALE
        </if>
          FROM (SELECT
                    B.*,
                    ROWNUM "RNUM"
                  FROM (SELECT
                            C.*
                          FROM VIEW_PRODUCT C
                         WHERE C.PRODUCT_NO IN (SELECT
                                                    MIN(F.PRODUCT_NO)
                                                  FROM VIEW_PRODUCT F
                                                 GROUP BY F.PRODUCT_NAME)
                            <if test="categoryCode  != null">
                               AND C.CATEGORY_CODE = #{ categoryCode }
                            </if>
                        <choose>
                            <when test="orderCondition == null">
                                ORDER BY C.PRODUCT_NO DESC
                            </when>
                            <when test="orderCondition == 'lowPrice' and categoryCode == 'RD'">
                                ORDER BY C.ROD_PRICE ASC
                            </when>
                            <when test="orderCondition == 'highPrice' and categoryCode == 'RD'">
                                ORDER BY C.ROD_PRICE DESC
                            </when>
                            <when test="orderCondition == 'lowPrice' and categoryCode == 'RL'">
                                ORDER BY C.REEL_PRICE ASC
                            </when>
                            <when test="orderCondition == 'highPrice' and categoryCode == 'RL'">
                                ORDER BY C.REEL_PRICE DESC
                            </when>
                            <when test="orderCondition == 'lowPrice' and categoryCode == 'LN'">
                                ORDER BY C.LINE_PRICE ASC
                            </when>
                            <when test="orderCondition == 'highPrice' and categoryCode == 'LN'">
                                ORDER BY C.LINE_PRICE DESC
                            </when>
                        </choose>) B
                 ) A
          LEFT JOIN (SELECT
                         G.*
                       FROM T_IMG_PATH G
                      WHERE IMG_CATEGORY = 'T') H
            ON A.PRODUCT_NO = H.PRODUCT_NO
          <if test="orderCondition != null and orderCondition == 'sale'">
          LEFT JOIN (SELECT
                         D.PRODUCT_NO,
                         SUM(AMOUNT) "TOTSALE"
                       FROM T_ORDER D
                      GROUP BY D.PRODUCT_NO) E
            ON A.PRODUCT_NO = E.PRODUCT_NO
          </if>
         WHERE A.RNUM BETWEEN #{ startRow } AND #{ endRow }
    </select>
    <!-- 상품 상세 페이지를 위한 한개의 상품 정보 조회 쿼리 -->
    <select id="selectOneProduct" parameterType="String" resultMap="productResultMap">
        SELECT
            *
          FROM VIEW_PRODUCT
         WHERE PRODUCT_NO = #{ productNo }
    </select>
    <!-- 상품 상세 페이지를 위한 같은 대상품 내에 속한 옵션 상품들 조회 쿼리 -->
    <select id="selectOptionList" parameterType="String" resultMap="productResultMap">
        SELECT
            PRODUCT_NO,
            PRODUCT_NAME,
            ROD_MODEL,
            ROD_REEL_TYPE,
            LINE_MIN,
            LINE_MAX,
            ROD_PRICE,
            REEL_MODEL,
            REEL_TYPE,
            REEL_PRICE,
            LINE_SIZE,
            LINE_PRICE
          FROM VIEW_PRODUCT
         WHERE PRODUCT_NAME = #{ productName }
    </select>
    <!-- 상품 상세페이지에서 해당 상품을 위시리스트에 등록하는 쿼리 -->
    <insert id="registWishList" parameterType="Map">
        INSERT INTO T_WISHLIST
        VALUES
            (
             SEQ_WISH_NO.NEXTVAL,
             #{ userNo },
             #{ productNo }
            )
    </insert>
</mapper>