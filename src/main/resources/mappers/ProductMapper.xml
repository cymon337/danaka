<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.osaz.danaka.product.model.dao.ProductMapper">
    <resultMap type="com.osaz.danaka.product.model.dto.ProductDTO" id="productResultMap">
        <id property="productNo" column="PRODUCT_NO"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="brandName" column="BRAND_NAME"/>
        <result property="productName" column="PRODUCT_NAME"/>
        <result property="productRegDate" column="PRODUCT_REG_DATE"/>
        <result property="stock" column="STOCK"/>
        <result property="tSavePath" column="TSAVE_PATH"/>
        <result property="dSavePath" column="DSAVE_PATH"/>
        <association property="rod" resultMap="rodResultMap"></association>
        <association property="reel" resultMap="reelResultMap"></association>
        <association property="line" resultMap="lineResultMap"></association>
    </resultMap>
    <resultMap id="rodResultMap" type="com.osaz.danaka.product.model.dto.RodDTO">
        <result property="model" column="ROD_MODEL"/>
        <result property="reelType" column="ROD_REEL_TYPE"/>
        <result property="lineMin" column="LINE_MIN"/>
        <result property="lineMax" column="LINE_MAX"/>
        <result property="price" column="ROD_PRICE"/>
    </resultMap>
    <resultMap id="reelResultMap" type="com.osaz.danaka.product.model.dto.ReelDTO">
        <result property="model" column="REEL_MODEL"/>
        <result property="reelType" column="REEL_TYPE"/>
        <result property="price" column="REEL_PRICE"/>
    </resultMap>
    <resultMap id="lineResultMap" type="com.osaz.danaka.product.model.dto.LineDTO">
        <result property="lineSize" column="LINE_SIZE"/>
        <result property="price" column="LINE_PRICE"/>
    </resultMap>
    <resultMap id="productCartMap" type="com.osaz.danaka.product.model.dto.ProductCartDTO">
        <id property="cartNo" column="CART_NO"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="productNo" column="PRODUCT_NO"/>
        <result property="productName" column="PRODUCT_NAME"/>
        <result property="brandName" column="BRAND_NAME"/>
        <result property="amount" column="AMOUNT"/>
        <result property="packageId" column="PACKAGE_ID"/>
        <result property="tSavePath" column="TSAVE_PATH"/>
        <association property="rod" resultMap="rodResultMap"></association>
        <association property="reel" resultMap="reelResultMap"></association>
        <association property="line" resultMap="lineResultMap"></association>
    </resultMap>
    <resultMap id="reviewResultMap" type="com.osaz.danaka.product.model.dto.ReviewDTO">
        <id property="reviewNo" column="REVIEW_NO"/>
        <result property="productNo" column="PRODUCT_NO"/>
        <result property="userNo" column="USER_NO"/>
        <result property="userNickname" column="USER_NICKNAME"/>
        <result property="reviewTitle" column="REVIEW_TITLE"/>
        <result property="reviewBody" column="REVIEW_BODY"/>
        <result property="buyDate" column="BUY_DATE"/>
        <result property="regDate" column="REG_DATE"/>
    </resultMap>
    <resultMap id="qnaResultMap" type="com.osaz.danaka.product.model.dto.QnaDTO">
        <id property="qnaNo" column="QNA_NO"/>
        <result property="productNo" column="PRODUCT_NO"/>
        <result property="userNo" column="USER_NO"/>
        <result property="userNickname" column="USER_NICKNAME"/>
        <result property="qnaBody" column="QNA_BODY"/>
        <result property="secretStatus" column="SECRET_STATUS"/>
        <result property="regDate" column="REG_DATE"/>
        <result property="reply" column="REPLY"/>
        <result property="replyDate" column="REPLY_DATE"/>
    </resultMap>

    <!-- 페이징 처리를 위한 대상품 총 개수 조회 쿼리 -->
    <select id="selectTotalCount" resultType="_int" parameterType="hashmap">
        SELECT
            COUNT(*)
          FROM VIEW_PRODUCT
         WHERE 1 = 1
        <if test="categoryCode != null">
           AND CATEGORY_CODE = #{ categoryCode }
        </if>
           AND PRODUCT_NO IN (SELECT
                                  MIN(PRODUCT_NO)
                                FROM VIEW_PRODUCT
                               GROUP BY PRODUCT_NAME)
      <if test="searchCondition == 'productName'">
          AND PRODUCT_NAME LIKE '%' || #{ searchValue } || '%'
      </if>
    </select>
    <!-- 상품 카테고리에 따른 대상품 목록 조회 쿼리, 정렬을 위해 동적 쿼리 사용함 -->
    <select id="selectListByCategory" parameterType="com.osaz.danaka.common.SelectCriteria" resultMap="productResultMap">
        SELECT
            A.*,
            A.RNUM,
            A.TSAVE_PATH
          FROM (SELECT
                    B.*,
                    ROWNUM "RNUM"
                  FROM (SELECT
                            C.*
                            <if test="orderCondition != null and orderCondition == 'sale'">
                                ,E.TOTSALE
                            </if>
                          FROM VIEW_PRODUCT C
                        <if test="orderCondition != null and orderCondition == 'sale'">
                            LEFT JOIN (SELECT
                                            D.PRODUCT_NO,
                                            SUM(AMOUNT) "TOTSALE"
                                        FROM T_ORDER D
                                        GROUP BY D.PRODUCT_NO) E
                            ON C.PRODUCT_NO = E.PRODUCT_NO
                        </if>
                         WHERE C.PRODUCT_NO IN (SELECT
                                                    MIN(F.PRODUCT_NO)
                                                  FROM VIEW_PRODUCT F
                                                 GROUP BY F.PRODUCT_NAME)
                            <if test="categoryCode != null">
                               AND C.CATEGORY_CODE = #{ categoryCode }
                            </if>
                        <choose>
                            <when test="orderCondition == null or orderCondition == ''">
                                ORDER BY C.PRODUCT_NO DESC
                            </when>
                            <when test="orderCondition != null and orderCondition == 'sale'">
                                ORDER BY E.TOTSALE DESC
                            </when>
                            <when test="orderCondition == 'lowPrice' and categoryCode == 'RD'">
                                ORDER BY C.ROD_PRICE ASC
                            </when>
                            <when test="orderCondition == 'highPrice' and categoryCode == 'RD'">
                                ORDER BY C.ROD_PRICE DESC
                            </when>
                            <when test="orderCondition == 'lowPrice' and categoryCode == 'RL'">
                                ORDER BY C.REEL_PRICE ASC
                            </when>
                            <when test="orderCondition == 'highPrice' and categoryCode == 'RL'">
                                ORDER BY C.REEL_PRICE DESC
                            </when>
                            <when test="orderCondition == 'lowPrice' and categoryCode == 'LN'">
                                ORDER BY C.LINE_PRICE ASC
                            </when>
                            <when test="orderCondition == 'highPrice' and categoryCode == 'LN'">
                                ORDER BY C.LINE_PRICE DESC
                            </when>
                        </choose>) B
                  LEFT JOIN (SELECT
                                G.PRODUCT_NO,
                                G.SAVE_PATH
                               FROM T_IMG_PATH G
                              WHERE IMG_CATEGORY = 'T') H
                                 ON B.PRODUCT_NO = H.PRODUCT_NO) A
         WHERE A.RNUM BETWEEN #{ startRow } AND #{ endRow }
    </select>




    <!-- 상품 상세 페이지를 위한 한개의 대상품 정보 조회 쿼리 -->
    <select id="selectOneProduct" parameterType="String" resultMap="productResultMap">
        SELECT
            A.*,
            B.DSAVE_PATH
          FROM VIEW_PRODUCT A
          LEFT JOIN (SELECT
                         PRODUCT_NO,
                         SAVE_PATH "DSAVE_PATH"
                       FROM T_IMG_PATH
                      WHERE IMG_CATEGORY = 'D') B
            ON A.PRODUCT_NO = B.PRODUCT_NO
         WHERE A.PRODUCT_NO = #{ productNo }
    </select>
    <!-- 상품 상세 페이지 위시리스트 체크 조회 쿼리 -->
    <select id="selectWishCheck" parameterType="hashmap" resultType="_int">
        SELECT
            COUNT(*)
          FROM T_WISHLIST
         WHERE PRODUCT_NO = #{ productNo }
           AND USER_NO = #{ userNo }
    </select>
    <!-- 상품 상세 페이지를 위한 같은 대상품 내에 속한 옵션 상품들 조회 쿼리 -->
    <select id="selectOptionList" parameterType="String" resultMap="productResultMap">
        SELECT
            A.CATEGORY_CODE,
            A.PRODUCT_NO,
            A.PRODUCT_NAME,
            A.BRAND_NAME,
            A.ROD_MODEL,
            A.ROD_REEL_TYPE,
            A.LINE_MIN,
            A.LINE_MAX,
            A.ROD_PRICE,
            A.REEL_MODEL,
            A.REEL_TYPE,
            A.REEL_PRICE,
            A.LINE_SIZE,
            A.LINE_PRICE,
            A.TSAVE_PATH
          FROM VIEW_PRODUCT A
          LEFT JOIN T_IMG_PATH B
            ON A.PRODUCT_NO = B.PRODUCT_NO
         WHERE A.PRODUCT_NAME = #{ productName }
           AND A.PRODUCT_NO != (SELECT
                                  MIN(PRODUCT_NO)
                                FROM T_PRODUCT
                               WHERE PRODUCT_NAME = #{ productName }
                               GROUP BY PRODUCT_NAME)
         ORDER BY A.PRODUCT_NO ASC
    </select>
    <!-- 상품 상세페이지에서 해당 상품과 같은 카테고리 상품들 20개만 조회 쿼리 -->
    <select id="selectRefProducts" parameterType="String" resultMap="productResultMap">
        SELECT
            A.PRODUCT_NO,
            B.SAVE_PATH AS "TSAVE_PATH"
          FROM (SELECT
                    PRODUCT_NO,
                    CATEGORY_CODE
                  FROM T_PRODUCT
                 WHERE PRODUCT_NO IN (SELECT
                                          MIN(PRODUCT_NO) "PRODUCT_NO"
                                      FROM T_PRODUCT
                                      GROUP BY PRODUCT_NAME)) A
          LEFT JOIN T_IMG_PATH B
            ON A.PRODUCT_NO = B.PRODUCT_NO
         WHERE A.CATEGORY_CODE = (SELECT
                                    C.CATEGORY_CODE
                                  FROM T_PRODUCT C
                                 WHERE C.PRODUCT_NO = #{ productNo })
           AND B.IMG_CATEGORY = 'T'
           AND ROWNUM BETWEEN 1 AND 20
           AND A.PRODUCT_NO != #{ productNo }
    </select>
    <!-- 상품 상세페이지에서 해당 상품을 위시리스트에 등록하는 쿼리 -->
    <insert id="insertWishProduct" parameterType="Map">
        INSERT INTO T_WISHLIST
        VALUES
            (
             SEQ_WISH_NO.NEXTVAL,
             #{ userNo },
             #{ productNo }
            )
    </insert>
    <!-- 상품 상세페이지에서 해당 상품을 위시리스트에서 제거하는 쿼리 -->
    <delete id="deleteWish" parameterType="Map">
        DELETE FROM T_WISHLIST
         WHERE PRODUCT_NO = #{ productNo }
           AND USER_NO = #{ userNo }
    </delete>
    <!-- 상품 상세페이지에서 해당 상품을 장바구니에 등록하는 쿼리 -->
    <insert id="insertCartProduct" parameterType="Map">
        INSERT INTO T_CART
        VALUES
            (
             SEQ_CART_NO.NEXTVAL,
             #{ userNo },
             #{ productNo },
             #{ amount },
             ''
            )
    </insert>
    <!-- 장바구니 목록 조회 -->
    <select id="selectCartList" parameterType="hashmap" resultMap="productCartMap">
        SELECT
            A.CART_NO,
            B.CATEGORY_CODE,
            A.PRODUCT_NO,
            B.PRODUCT_NAME,
            B.BRAND_NAME,
            B.ROD_MODEL,
            B.ROD_REEL_TYPE,
            B.LINE_MIN,
            B.LINE_MAX,
            B.ROD_PRICE,
            B.REEL_MODEL,
            B.REEL_TYPE,
            B.REEL_PRICE,
            B.LINE_SIZE,
            B.LINE_PRICE,
            A.AMOUNT,
            A.PACKAGE_ID,
            B.TSAVE_PATH
          FROM T_CART A
          LEFT JOIN VIEW_PRODUCT B
            ON A.PRODUCT_NO = B.PRODUCT_NO
         WHERE A.CART_NO IN
                <foreach collection="cartNos" item="cartNos" open="(" close=")" separator=",">
                    #{ cartNos }
                </foreach>
    </select>
    <!-- 상품 구매시 구매내역 테이블에 데이터 추가하는 쿼리 -->
    <insert id="insertOrder" parameterType="java.util.List">
        INSERT INTO T_ORDER
            (
             ORDER_NO,
             USER_NO,
             PRODUCT_NO,
             ORDER_ID,
             PACKAGE_ID,
             ADDRESS,
             AMOUNT,
             TOT_PRICE,
             ORDER_REQUEST,
             PAY_TYPE,
             REG_DATE
            )
        SELECT
            SEQ_ORDER_NO.NEXTVAL,
            A.*
          FROM (
        <foreach collection="list" item="order" separator="UNION ALL ">
            SELECT
                #{ order.userNo } AS USER_NO,
                #{ order.productNo } AS PRODUCT_NO,
                #{ order.orderId, jdbcType = VARCHAR } AS ORDER_ID,
                #{ order.packageId, jdbcType = INTEGER } AS PACKAGE_ID,
                #{ order.address } AS ADDRESS,
                #{ order.amount } AS AMOUNT,
                #{ order.totPrice } AS TOT_PRICE,
                #{ order.orderRequest } AS ORDER_REQUEST,
                #{ order.payType } AS PAY_TYPE,
                SYSDATE AS REG_DATE
              FROM DUAL
        </foreach>) A
    </insert>
    <!-- 구매했는지 여부 확인 -->
    <select id="selectOrder" parameterType="map" resultType="hashmap">
        SELECT
            RNUM,
            PRODUCT_NO,
            PRODUCT_NAME,
            CATEGORY_CODE,
            ROD_MODEL,
            REEL_MODEL,
            LINE_SIZE,
            REG_DATE
          FROM (SELECT
                    ROWNUM "RNUM",
                    PRODUCT_NO,
                    PRODUCT_NAME,
                    CATEGORY_CODE,
                    ROD_MODEL,
                    REEL_MODEL,
                    LINE_SIZE,
                    REG_DATE
                FROM (SELECT
                           A.PRODUCT_NO,
                           B.PRODUCT_NAME,
                           B.CATEGORY_CODE,
                           B.ROD_MODEL,
                           B.REEL_MODEL,
                           B.LINE_SIZE,
                           A.REG_DATE
                       FROM T_ORDER A
                       LEFT JOIN VIEW_PRODUCT B
                         ON A.PRODUCT_NO = B.PRODUCT_NO
                      WHERE A.PRODUCT_NO IN(SELECT
                                                 PRODUCT_NO
                                              FROM T_PRODUCT
                                             WHERE PRODUCT_NAME = #{ productName })
                        AND A.USER_NO = #{ userNo }
                      ORDER BY A.ORDER_NO DESC))
         WHERE RNUM = 1
    </select>
    <!-- 상품 리뷰 총 개수 조회 -->
    <select id="selectTotalReviewCount" parameterType="map" resultType="_int">
        SELECT
            COUNT(*)
          FROM T_REVIEW
         WHERE PRODUCT_NO IN (SELECT
                                  PRODUCT_NO
                                FROM T_PRODUCT
                               WHERE PRODUCT_NAME = #{ productName })
    </select>
    <!-- 상품 qna 총 개수 조회 -->
    <select id="selectTotalQnaCount" parameterType="String" resultType="_int">
        SELECT
            COUNT(*)
          FROM T_QNA
         WHERE PRODUCT_NO = #{ productNo }
    </select>
    <!-- 상품 리뷰 조회 -->
    <select id="selectReviewList" parameterType="com.osaz.danaka.common.SelectCriteria" resultMap="reviewResultMap">
        SELECT
            D.*
          FROM (SELECT
                      ROWNUM "RNUM",
                      A.REVIEW_NO,
                      C.PRODUCT_NAME,
                      A.USER_NO,
                      B.USER_NICKNAME,
                      A.REVIEW_TITLE,
                      A.REVIEW_BODY,
                      A.BUY_DATE,
                      A.REG_DATE
                 FROM T_REVIEW A
                 LEFT JOIN T_MEMBER B
                   ON A.USER_NO = B.USER_NO
                 LEFT JOIN T_PRODUCT C
                   ON A.PRODUCT_NO = C.PRODUCT_NO
                WHERE A.PRODUCT_NO IN (SELECT
                                           PRODUCT_NO
                                         FROM T_PRODUCT
                                        WHERE PRODUCT_NAME = #{ searchValue })
                ORDER BY A.REVIEW_NO DESC) D
         WHERE D.RNUM BETWEEN #{ startRow } AND #{ endRow }
    </select>
    <!-- 상품 qna 조회 -->
    <select id="selectQnaList" parameterType="com.osaz.danaka.common.SelectCriteria" resultMap="qnaResultMap">
        SELECT
            D.*
          FROM (SELECT
                     ROWNUM "RNUM",
                     A.QNA_NO,
                     C.PRODUCT_NAME,
                     A.USER_NO,
                     B.USER_NICKNAME,
                     A.QNA_BODY,
                     A.SECRET_STATUS,
                     A.REG_DATE,
                     A.REPLY,
                     A.REPLY_DATE
                 FROM T_QNA A
                 LEFT JOIN T_MEMBER B
                   ON A.USER_NO = B.USER_NO
                 LEFT JOIN T_PRODUCT C
                   ON A.PRODUCT_NO = C.PRODUCT_NO
                WHERE A.PRODUCT_NO = #{ searchValue }
                ORDER BY A.QNA_NO DESC) D
         WHERE D.RNUM BETWEEN #{ startRow } AND #{ endRow }
    </select>
    <!-- 상품 리뷰 등록 -->
    <insert id="insertReview" parameterType="com.osaz.danaka.product.model.dto.ReviewDTO">
        INSERT INTO T_REVIEW
        VALUES
            (
             SEQ_REVIEW_NO.NEXTVAL,
             #{ productNo },
             #{ userNo },
             #{ reviewTitle },
             #{ reviewBody },
             #{ buyDate },
             DEFAULT
            )
    </insert>
    <!-- 상품 문의 등록 -->
    <insert id="insertQna" parameterType="com.osaz.danaka.product.model.dto.QnaDTO">
        INSERT INTO T_QNA
        VALUES
            (
                SEQ_QNA_NO.NEXTVAL,
                #{ productNo },
                #{ userNo },
                #{ qnaBody },
                #{ secretStatus },
                DEFAULT,
                '',
                ''
            )
    </insert>
    <!-- 상품 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="String">
        DELETE FROM T_REVIEW
        WHERE REVIEW_NO = #{ reviewNo }
    </delete>
    <!-- 상품 문의 삭제 -->
    <delete id="deleteQna" parameterType="String">
        DELETE FROM T_QNA
        WHERE QNA_NO = #{ qnaNo }
    </delete>
    <!-- 상품 리뷰 수정 -->
    <update id="updateReview" parameterType="hashmap">
        UPDATE T_REVIEW
           SET REVIEW_BODY = #{ reviewBody }
         WHERE REVIEW_NO = #{ reviewNo }
    </update>
    <!-- 상품 문의 수정 -->
    <update id="updateQna" parameterType="hashmap">
        UPDATE T_QNA
        <if test="qnaBody != null">
           SET QNA_BODY = #{ qnaBody }
        </if>
        <if test="qnaReply != null">
           SET REPLY = #{ qnaReply },
               REPLY_DATE = DEFAULT
       </if>
         WHERE QNA_NO = #{ qnaNo }
    </update>






    <!--상품 테이블 데이터 삽입-->
    <insert id="insertProduct">
        INSERT
        INTO T_PRODUCT A
            (
            A.PRODUCT_NO
        , A.CATEGORY_CODE
        , A.BRAND_NO
        , A.PRODUCT_REG_DATE
        , A.PRODUCT_NAME
        , A.STOCK
        )
        VALUES
            (
            SEQ_PRODUCT_NO.NEXTVAL
                , #{ categoryCode }
                , #{ brandNo }
                , DEFAULT
                , #{ productName }
                , #{ stock }
            )
    </insert>

    <!--기준에 따라 카테고리 테이블 데이터 삽입-->
    <insert id="insertCategory" parameterType="Map">
        INSERT INTO ${ category }
        <if test="category == 'T_ROD'">
            VALUES
            (
            #{ lastNum }
            , #{ rodModel }
            , #{ reelType }
            , #{ lineMin }
            , #{ lineMax }
            , #{ rodPrice }
            )
        </if>
        <if test="category == 'T_REEL'">
            VALUES
            (
            #{ lastNum }
            , #{ reelModel }
            , #{ reelType }
            , #{ reelPrice }
            )
        </if>
        <if test="category == 'T_LINE'">
            VALUES
            (
            #{ lastNum }
            , #{ lineSize }
            , #{ linePrice }
            )
        </if>
    </insert>

    <!--T_PRODUCT 테이블 마지막 번호 구하기-->
    <select id="selectProductLastNum" resultType="string">
        SELECT MAX(PRODUCT_NO)
        FROM T_PRODUCT
    </select>

    <!--T_IMG_PATH 데이터 추가-->
    <insert id="insertImgFile" parameterType="com.osaz.danaka.product.model.dto.imgPathDTO">
        INSERT
        INTO T_IMG_PATH A
            (
            A.IMG_NO
        , A.PRODUCT_NO
        , A.IMG_CATEGORY
        , A.ORG_FILE_NAME
        , A.SYS_FILE_NAME
        , A.SAVE_PATH
        )
        VALUES
            (
            SEQ_IMG_NO.NEXTVAL
                , #{ productNo }
                , #{ imgCategory }
                , #{ orgFileName }
                , #{ sysFileName}
                , #{ savePath }
            )
    </insert>

    <!-- 공지사항 최근 5개 조회 -->
    <select id="selectTop4Product" resultMap="productResultMap">
        SELECT
            *
        FROM (SELECT
                  *
              FROM VIEW_PRODUCT
              ORDER BY ROWNUM DESC) A
        WHERE <![CDATA[ ROWNUM <= 4 ]]>
          AND A.IMG_CATEGORY = 'T'
    </select>
</mapper>